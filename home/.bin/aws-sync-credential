#!/bin/zsh

# define
this_script=`basename $0`
docker_volume='aws-credentials'
docker_container='aws-tmp'
docker_mount_path='/aws-volume'
tmp_cred_filename='aws-credentials'
tmp_cred_file="/tmp/${tmp_cred_filename}"
profile="$1"


# exit if no argument
if [ -z "$profile" ]; then
    echo "usage: $this_script <aws-profile-name>" >&2
    exit 1
fi


# create .aws/credentials
export_credentials=$(aws-vault export $profile)
AWS_ACCESS_KEY_ID=$(echo $export_credentials | grep AWS_ACCESS_KEY_ID | cut -d '=' -f 2)
AWS_SECRET_ACCESS_KEY=$(echo $export_credentials | grep AWS_SECRET_ACCESS_KEY | cut -d '=' -f 2)
AWS_SESSION_TOKEN=$(echo $export_credentials | grep AWS_SESSION_TOKEN | cut -d '=' -f 2)


# write temporary credentisla file
cat << __EOF__ > $tmp_cred_file
[$profile]
aws_access_key_id     = $AWS_ACCESS_KEY_ID
aws_secret_access_key = $AWS_SECRET_ACCESS_KEY
aws_session_token     = $AWS_SESSION_TOKEN
__EOF__


# copy credentals file to docker volume
docker run -d --rm --name $docker_container --mount type=volume,source=${docker_volume},target=${docker_mount_path} amazon/aws-cli > /dev/null
docker cp ${tmp_cred_file} ${docker_container}:${docker_mount_path}/credentials > /dev/null
docker stop $docker_container > /dev/null

# remove temporary credentials file from local
rm -f $tmp_cred_file
echo 'credentials file synchronized'